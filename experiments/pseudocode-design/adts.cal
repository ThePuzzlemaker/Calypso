// C-style struct
type Point =
    x: float,
    y: float

// Tuple struct
type PairOfInts = sint, sint

// Generic structs
type[T] GenericPair = T

type[T] GenericPoint =
    x: T,
    y: T

// Enums, untagged (no values inside variants)
type Color
    = Red
    | Green
    | Blue

// Enums, tagged (values inside variants)
type Color2
    = Red
    | Green
    | Blue
    | RgbCombo(uint, uint, uint)

// Enums, tagged, struct variants
type Color3
    = Red
    | Green
    | Blue
    | RgbCombo(
        red: uint,
        green: uint,
        blue: uint
    )

// Enums, generic
type[T] Option = Some(T) | None

// Type alias
type Foo -> Bar

// Generic type alias
type[T] FooResult -> Result[T, FooError]

// Empty struct
type Empty {}

// Void enum (cannot be initialized)
type Void = |
